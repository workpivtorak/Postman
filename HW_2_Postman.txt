HW_2 Postman

http://162.55.220.72:5005/first
1. Отправить запрос.
2. Статус код 200
3. Проверить, что в body приходит правильный string.

                  pm.test("Body matches string", function () {
                  pm.expect(pm.response.text()).to.include("This is the first responce from server!");
                  });
                  
http://162.55.220.72:5005/user_info_3
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.
4. Проверить, что name в ответе равно name s request (name вбить руками.)
5. Проверить, что age в ответе равно age s request (age вбить руками.)
6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
7. Спарсить request.
8. Проверить, что name в ответе равно name s request (name забрать из request.)
9. Проверить, что age в ответе равно age s request (age забрать из request.)
10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
11. Вывести в консоль параметр family из response.
12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)                  
 
let jsonData = pm.response.json(); // 3. Спарсить response body в json.

let req_name = request.data.name;
let resp_name = jsonData.name;
console.log("resp_name -- ", req_name);
pm.test("Check_name_reg&resp ", function () { // 4. Проверить, что name в ответе равно name s request (name вбить руками.)
        pm.expect(resp_name).to.eql("Yurii");
});

let req_age = request.data.age;
let resp_age = jsonData.age;
console.log("req_age -- ", req_age);
pm.test("Check_age_reg&resp ", function () { // 5. Проверить, что age в ответе равно age s request (age вбить руками.)
        pm.expect(resp_age).to.eql("30");
});

let req_salary = request.data.salary;
let resp_salary = jsonData.salary;
console.log("req_salary -- ", req_salary);
pm.test("Check_salary_reg&resp ", function () { // 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
       pm.expect(resp_salary).to.eql(700);
});

let request_p = request.data; // 7. Спарсить request.

let request_name = request_p.name ;
let response_name = jsonData.name;
console.log("request_name --", request_name,"resp_name --", response_name);
pm.test("Check_name_reg&resp ", function () { // 8. Проверить, что name в ответе равно name s request (name забрать из request.)
   pm.expect(response_name).to.eql(request_name);
});

let request_age = request_p.age;
let response_age = jsonData.age;
console.log(`request_age-${request_age} vs response_age-${response_age}`);
pm.test("Check_age_reg&resp ", function () { // 9. Проверить, что age в ответе равно age s request (age забрать из request.)
        pm.expect(request_age).to.eql(response_age);
});

let request_salary = request_p.salary;
let response_salary = jsonData.salary;
console.log(`request_salary-${request_salary} vs response_salary-${response_salary}`);
pm.test("Check_salary_reg&resp ", function () { // 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
        pm.expect(response_salary).to.eql(Number(request_salary));
});

console.log('Family--',(jsonData.family)); // 11. Вывести в консоль параметр family из response.

let respon_salary = jsonData.family.u_salary_1_5_year;
let salary_mod = request_p.salary*4;
console.log(`respon_salary-${respon_salary} vs salary_mod-${salary_mod}`);
pm.test("check_salary", function () { // 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)
       pm.expect(respon_salary).to.eql(salary_mod);
});
