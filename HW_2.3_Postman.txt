http://162.55.220.72:5005/object_info_3
1. Отправить запрос.
2. Статус код 200
3. Спарсить response body в json.
4. Спарсить request.
5. Проверить, что name в ответе равно name s request (name забрать из request.)
6. Проверить, что age в ответе равно age s request (age забрать из request.)
7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
8. Вывести в консоль параметр family из response.
9. Проверить, что у параметра dog есть параметры name.
10. Проверить, что у параметра dog есть параметры age.
11. Проверить, что параметр name имеет значение Luky.
12. Проверить, что параметр age имеет значение 4

let jsonData = pm.response.json(); // 3. Спарсить response body в json.
var requestdata = pm.request.url.query.toObject(); // 4. Спарсить request.

let resp_name = jsonData.name;
let req_name = requestdata.name;

console.log("resp_name -- ", resp_name,"req_name -- ", req_name);
pm.test("Check_name_reg&resp ", function () { // 5. Проверить, что name в ответе равно name s request  (name забрать из request.)
       pm.expect(resp_name).to.eql(req_name);
       });

let resp_age = jsonData.age;
let req_age = requestdata.age;

console.log("resp_age --",resp_age, "req_age --", req_age);
pm.test("Check_age_reg&resp ", function () { // 6. Проверить, что age в ответе равно age s request (age забрать из request.)
        pm.expect(resp_age).to.eql(req_age);
});  

let resp_salary = jsonData.salary;
let req_salary = requestdata.salary;

console.log("resp_salary --",resp_salary,"req_salary --", req_salary);
pm.test("Check_salary_reg&resp ", function () { // 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
       pm.expect(resp_salary).to.eql(Number(req_salary));
});

console.log('Family--',(jsonData.family)); // 8. Вывести в консоль параметр family из response

let paramOfDog = jsonData.family.pets.dog;

console.log('paramOfDog-',paramOfDog);
pm.test("checkParamNameOfDog", function () { // 9. Проверить, что у параметра dog есть параметры name.
     pm.expect(paramOfDog).to.hasOwnProperty("name")
});

pm.test("checkParamNameOfDog", function () { // 10. Проверить, что у параметра dog есть параметры age.
     pm.expect(paramOfDog).to.hasOwnProperty("age")
});

let paramOfDogname = jsonData.family.pets.dog.name;

console.log('paramOfDogname-',paramOfDogname);
pm.test("checkParamNameOfDogName", function () { // 11. Проверить, что параметр name имеет значение Luky.
     pm.expect(paramOfDogname).to.hasOwnProperty("Luky")
});

let paramOfDogAge = jsonData.family.pets.dog.age;

console.log('paramOfDogAge-',paramOfDogAge);
pm.test("checkParamNameOfDogAge", function () { // 12. Проверить, что параметр age имеет значение 4.
     pm.expect(paramOfDogAge).to.hasOwnProperty("4")
});
